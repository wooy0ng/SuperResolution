"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = CropImageModal;

var _react = _interopRequireWildcard(require("react"));

var _reactBootstrap = require("react-bootstrap");

var _useObjectUrl = _interopRequireDefault(require("use-object-url"));

var _CropImagePanel = _interopRequireDefault(require("./CropImagePanel"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function CropImageModal(_ref) {
  var show = _ref.show,
      imageFile = _ref.imageFile,
      value = _ref.value,
      onChange = _ref.onChange,
      onConfirm = _ref.onConfirm,
      onCancel = _ref.onCancel,
      onRemove = _ref.onRemove,
      _ref$inputOptions = _ref.inputOptions,
      inputOptions = _ref$inputOptions === void 0 ? {} : _ref$inputOptions,
      _ref$cropOptions = _ref.cropOptions,
      cropOptions = _ref$cropOptions === void 0 ? {} : _ref$cropOptions,
      _ref$outputOptions = _ref.outputOptions,
      outputOptions = _ref$outputOptions === void 0 ? {} : _ref$outputOptions,
      _ref$displayOptions = _ref.displayOptions,
      displayOptions = _ref$displayOptions === void 0 ? {} : _ref$displayOptions;
  var _inputOptions$maxWidt = inputOptions.maxWidth,
      inputMaxWidth = _inputOptions$maxWidt === void 0 ? Infinity : _inputOptions$maxWidt,
      _inputOptions$maxHeig = inputOptions.maxHeight,
      inputMaxHeight = _inputOptions$maxHeig === void 0 ? Infinity : _inputOptions$maxHeig,
      _inputOptions$mimeTyp = inputOptions.mimeType,
      inputMimeType = _inputOptions$mimeTyp === void 0 ? "image/jpeg" : _inputOptions$mimeTyp,
      inputQuality = inputOptions.quality;
  var aspect = cropOptions.aspect,
      maxZoom = cropOptions.maxZoom;
  var _outputOptions$maxWid = outputOptions.maxWidth,
      maxWidth = _outputOptions$maxWid === void 0 ? Infinity : _outputOptions$maxWid,
      _outputOptions$maxHei = outputOptions.maxHeight,
      maxHeight = _outputOptions$maxHei === void 0 ? Infinity : _outputOptions$maxHei,
      _outputOptions$mimeTy = outputOptions.mimeType,
      mimeType = _outputOptions$mimeTy === void 0 ? "image/jpeg" : _outputOptions$mimeTy,
      quality = outputOptions.quality;
  var _displayOptions$title = displayOptions.title,
      title = _displayOptions$title === void 0 ? "Crop Image" : _displayOptions$title,
      _displayOptions$remov = displayOptions.removeButtonText,
      removeButtonText = _displayOptions$remov === void 0 ? "Remove" : _displayOptions$remov,
      _displayOptions$confi = displayOptions.confirmButtonText,
      confirmButtonText = _displayOptions$confi === void 0 ? "Confirm" : _displayOptions$confi,
      _displayOptions$showR = displayOptions.showRemoveButton,
      showRemoveButton = _displayOptions$showR === void 0 ? true : _displayOptions$showR,
      _displayOptions$showC = displayOptions.showConfirmButton,
      showConfirmButton = _displayOptions$showC === void 0 ? true : _displayOptions$showC;
  var imageUrl = (0, _useObjectUrl["default"])(imageFile);

  var _useState = (0, _react.useState)(),
      _useState2 = _slicedToArray(_useState, 2),
      resizedUrl = _useState2[0],
      setResizedUrl = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      resizing = _useState4[0],
      setResizing = _useState4[1];

  (0, _react.useEffect)(function () {
    if (imageUrl) {
      setResizing(true);
      (0, _utils.limitImageSize)({
        imageUrl: imageUrl,
        maxWidth: inputMaxWidth,
        maxHeight: inputMaxHeight,
        mimeType: inputMimeType,
        quality: inputQuality
      }).then(function (url) {
        return setResizedUrl(url);
      })["catch"](function (err) {
        return console.error(err);
      })["finally"](function () {
        return setResizing(false);
      });
    } else {
      setResizedUrl();
    }
  }, [imageUrl]);
  var cropResultRef = (0, _react.useRef)();

  function handleCropComplete(croppedArea, croppedAreaPixels) {
    cropResultRef.current = {
      croppedArea: croppedArea,
      croppedAreaPixels: croppedAreaPixels
    };
  }

  function handleConfirm() {
    (0, _utils.getCroppedFile)(resizedUrl, cropResultRef.current.croppedAreaPixels, maxWidth, maxHeight, mimeType, quality).then(onConfirm);
  }

  return _react["default"].createElement(_reactBootstrap.Modal, {
    show: show,
    onHide: onCancel,
    size: "lg"
  }, _react["default"].createElement(_reactBootstrap.Modal.Header, {
    closeButton: true
  }, _react["default"].createElement(_reactBootstrap.Modal.Title, null, title)), _react["default"].createElement(_reactBootstrap.Modal.Body, {
    style: {
      height: "50vh"
    }
  }, resizing && _react["default"].createElement("div", {
    className: "d-flex justify-content-center align-items-center h-100"
  }, _react["default"].createElement(_reactBootstrap.Spinner, {
    animation: "grow"
  })), resizedUrl && _react["default"].createElement(_CropImagePanel["default"], {
    imageUrl: resizedUrl,
    value: value,
    onChange: onChange,
    onCropComplete: handleCropComplete,
    aspect: aspect,
    maxZoom: maxZoom
  })), _react["default"].createElement(_reactBootstrap.Modal.Footer, null, showRemoveButton && _react["default"].createElement(_reactBootstrap.Button, {
    variant: "danger",
    className: "mr-auto",
    onClick: onRemove
  }, removeButtonText), showConfirmButton && _react["default"].createElement(_reactBootstrap.Button, {
    variant: "primary",
    onClick: handleConfirm
  }, confirmButtonText)));
}